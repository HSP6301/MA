1st Prac
Lab01
PeView - header,rdata,text,rscr
PeID - Packed or unpacked
Dependancy Walker - Immported dlls & Functions
strings - to check the strings in exe

Pract 1:
---LAB01-01---
PE VIEWER -> LAB01.DLL (OPEN FILE) -> IMAGE HEADER/FILE HEADER (YY-MM-DD) -> 
REPEAT FPR LAB01.EXE 
PEID -> OPEN (EXE) -> CHECHK OF PACKED OR NOT
DEPEDANCY WALKER -> FILE -> .DLL FILE 
CMD -> cd ../ (get back)-> copy path >strings Lab01-01.dll (repeat for .exe)

---LAB01-02---
Virus total->upload file->
DEPEDANCY WALKER -> FILE -> .exe (for checking IMPORTS/functions)
CMD -> cd ../ (get back)-> copy path >strings Lab01-02.dll
CMD-> upx -d lab01-02.exe

----Lab03-1----
ApateDNS (netcat-win32-1.12>nc.exe -L -p 80/443)
Regshot (Take 1st Snapshot)
Open Wireshark & Process Monitor filter windows process
Run the Malware
ProcMon>LowerPaneView>Dll
ProcMon>LowerPaneView>Handles (shows files,registries,mutex)
AdpateDNS (Show the url its connecting too)
Regshot (2nd Snapshot) 

---Lab03-2---
Take 1st Regshot
"rundll32.exe dll_path,installA"
Take 2nd Regshot 
IPRIP Service added by the malware
run under svchost.exe
CND-> net start IPRIP

----Lab03-3 (KEYLOGGER)----
Regshot (take snapshots)
PROCESSS EXPLORER
start PROCESS MONITOR
RUN MALWARE
opn svchost.exe from process explo
notepad type something 
stop procmon
procmon filter (PID is 668) APPPLY
check file at LAB location

---Lab03-04---
PE view
process explorer 
start procmon
Run Malware
quick open malware in green at process explorer (lab03-04.exe:1256)
stop procmon
GOTO ProcMon
Filter > ProcessName > Contains > Lab03-04
Filter > Event Class > is > process (ProcessCreate)
__________________________________________________________________________________________

PRACT 2
---LAB05-01.dll---
What is the address of DllMain? 
load malware in IDA
find dllMain function
in IDA 
Where is the import gethostbyname located?
view->string search string (gethostbyname)
IDA View-A-> search text (string gethostbyname)
How many call functions ?
click on gethostbyname->jumpt to xrefs->DONE
For gethostbyname at 0x10001757, which DNS request is made?
JUMP->jump to add->0x10001757->u will foun practicalmalwareanalysis.com 
How many parameters and local variables are recognized for the subroutine at 0x10001656? 
JUMP->jump to add->0x10001656->cont variable/count parameter
Where is the string \cmd.exe /c located in the disassembly? 
STRING->search (\cmd.exe /c)
What happens around the referencing of \cmd.exe /c?
quit, exit, cd, idle, uptime, module, minstall and inject
At 0x100101C8, dword_1008E5C4 indicates which path to take. How does the malware 
set dword_1008E5C4?
IDA View-A->jump->jump to add-> 0x100101C8-> it contains move statement and set value it is trying to know the version of os
A few hundred lines into the subroutine at 0x1000FF58, a series of comparisons use memcmp to compare strings. What happens if the string comparison to robotwork is successful (when memcmp returns 0)?
IDA View-A->jump->jump to add-> 0x1000FF58-> it opens current version
What does the export PSLIST do?
CLOSE IDA AND OPEN MALWARE AGAIN IN IDA -> GOTO EXPORTS-> PLIST (graph view)->so, it will take path depending on result of sub_100036C3. it is ckecking os version.
Use the graph mode to graph the cross-references from sub_10004E79. Which API functions
could be called by entering this function? Based on the API functions alone, what could you rename this function?
IDA View-A->jump->jump to add-> sub_10004E79
VIEW-> graph-> flow chart/xrefs forms
so, it identifies the language and send its information
How many Windows API functions does DllMain call directly? How many at a depth of 2?
DllMain -> graph view
VIEW -> graph-> user xrefs-> recur depth (1)
At 0x10001358, there is a call to Sleep (an API function that takes one parameter containing the number of milliseconds to sleep). Looking backward through the code, how long will the program sleep if this code executes?
IDA View-A->jump->jump to add->0x10001358
1000mili seconds in 1 second
it will sleep for 30 seconds after one sec of execution
At 0x10001701 is a call to socket. What are the three parameters?
IDA View-A->jump->jump to add->0x10001701
check for 3 push parameters
Using the MSDN page for socket and the named symbolic constants functionality in IDA Pro,
can you make the parameters more meaningful? What are the parameters after you apply changes?
skip
Search for usage of the in instruction (opcode 0xED). This instruction is used with a magic string VMXh to perform VMware detection. Is that in use in this malware? Using the cross-references to the function that executes the in instruction, is there further evidence of VMware detection?
alt+b ->ED ->
Jump your cursor to 0x1001D988. What do you find?
IDA View-A->jump->jump to add->0x1001D988
bunch of random data
If you have the IDA Python plug-in installed (included with the commercial version of IDA
Pro), run Lab05-01.py, an IDA Pro Python script provided with the malware for this book.(Make sure the cursor is at 0x1001D988.) What happens after you run the script?
It will run in IDApro
IDA View-A->jump->jump to add->0x1001D988 -> data will be in encrypted manner, you have to 
know thw key of xor operation
Open the script with a text editor. How does it work?
OPEN MALWARE IN NOTEPAD++ 
it will decrypt the values wich we saw from seconds





